/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import modelo.Conversor.Binario;
import modelo.Conversor.Decimal;
import modelo.Conversor.IEEE754;

/**
 *
 * @author salas
 */
public class IEEE754Vista extends javax.swing.JFrame {

    /**
     * Creates new form Evaluador
     */
    public IEEE754Vista() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSigno32 = new javax.swing.JTextField();
        txtExponente32 = new javax.swing.JTextField();
        txtMantisa32 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSigno64 = new javax.swing.JTextField();
        txtExponente64 = new javax.swing.JTextField();
        txtMantisa64 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnConvertir = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        panel_datos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtInputBinario = new javax.swing.JTextField();
        txtInputDecimal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estandar IEEE754");

        txtSigno32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSigno32KeyTyped(evt);
            }
        });

        txtExponente32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExponente32KeyTyped(evt);
            }
        });

        txtMantisa32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMantisa32KeyTyped(evt);
            }
        });

        jLabel4.setText("64 bits:");

        jLabel5.setText("signo");

        jLabel6.setText("exponente");

        jLabel7.setText("mantisa");

        jLabel8.setText("32 bits:");

        txtSigno64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSigno64KeyTyped(evt);
            }
        });

        txtExponente64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExponente64KeyTyped(evt);
            }
        });

        txtMantisa64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMantisa64KeyTyped(evt);
            }
        });

        jLabel9.setText("signo");

        jLabel10.setText("exponente");

        jLabel11.setText("mantisa");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel12.setText("IEEE754");

        btnConvertir.setText("Convertir");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        panel_datos.setBorder(javax.swing.BorderFactory.createTitledBorder("NÃºmero"));

        jLabel1.setText("Decimal:");

        jLabel2.setText("Binario:");

        txtInputBinario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputBinarioKeyTyped(evt);
            }
        });

        txtInputDecimal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputDecimalKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panel_datosLayout = new javax.swing.GroupLayout(panel_datos);
        panel_datos.setLayout(panel_datosLayout);
        panel_datosLayout.setHorizontalGroup(
            panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_datosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInputDecimal, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(txtInputBinario))
                .addGap(21, 21, 21))
            .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_datosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(59, 416, Short.MAX_VALUE)))
        );
        panel_datosLayout.setVerticalGroup(
            panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_datosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtInputDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInputBinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16))
            .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_datosLayout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jLabel1)
                    .addContainerGap(71, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txtMantisa64, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMantisa32, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(112, 112, 112)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(37, 37, 37)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtSigno32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(txtExponente32, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(35, 35, 35)
                                                .addComponent(jLabel10)
                                                .addGap(153, 153, 153)
                                                .addComponent(jLabel11))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtSigno64, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtExponente64, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panel_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtExponente32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMantisa32, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSigno32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSigno64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtExponente64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMantisa64, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConvertir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //mÃ©todo que limpiar las cajas de texto de la interfaz
    private void limpiar() {
        txtExponente32.setText("");
        txtExponente64.setText("");
        txtInputBinario.setText("");
        txtInputDecimal.setText("");
        txtMantisa32.setText("");
        txtMantisa64.setText("");
        txtSigno32.setText("");
        txtSigno64.setText("");
        txtInputDecimal.setEditable(true);
        txtInputBinario.setEditable(true);
        txtExponente32.setEditable(true);
        txtExponente64.setEditable(true);
        txtSigno32.setEditable(true);
        txtSigno64.setEditable(true);
        txtMantisa32.setEditable(true);
        txtMantisa64.setEditable(true);
        btnConvertir.setEnabled(true);
    }

    //-------------------------------------
    //
    private boolean hayPuntos(String txt) {
        return txt.contains(".");
    }
    //--------------------------

    private void convertir(IEEE754 f) {
        String exp32 = f.exponente32();
        String exp64 = f.exponente64();

        while (exp32.length() != 8) {
            exp32 = "0" + exp32;
        }
        while (exp64.length() != 11) {
            exp64 = "0" + exp64;
        }
        txtSigno32.setText(f.getSigno());
        txtSigno64.setText(f.getSigno());
        txtExponente32.setText(exp32);
        txtExponente64.setText(exp64);
        txtMantisa32.setText(f.getMantisa32());
        txtMantisa64.setText(f.getMantisa64());

    }

    private void desabilitar() {
        txtInputDecimal.setEditable(false);
        txtInputBinario.setEditable(false);
        txtExponente32.setEditable(false);
        txtExponente64.setEditable(false);
        txtSigno32.setEditable(false);
        txtSigno64.setEditable(false);
        txtMantisa32.setEditable(false);
        txtMantisa64.setEditable(false);
        btnConvertir.setEnabled(false);

    }


    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        if (!(txtInputDecimal.getText().isEmpty() && txtInputBinario.getText().isEmpty())) {
            IEEE754 f;
            Decimal d = new Decimal();
            if (!txtInputDecimal.getText().isEmpty() && !txtInputDecimal.getText().equals(".")) {
                String bin = d.cambiarABase(txtInputDecimal.getText(), 2, 100);
                f = new IEEE754(bin);

                convertir(f);
                desabilitar();
                txtInputBinario.setText(bin);
            } else {
                if (!txtInputBinario.getText().isEmpty() && !txtInputBinario.getText().equals(".")) {
                    f = new IEEE754(txtInputBinario.getText());

                    convertir(f);
                    desabilitar();
                    txtInputDecimal.setText(d.aDecimal(txtInputBinario.getText(), 2));
                }
            }

        } else {
            IEEE754 f = new IEEE754();
            StringBuilder sBin, sDec;
            sBin = new StringBuilder();
            sDec = new StringBuilder();
            if (!(txtSigno32.getText().isEmpty()
                    && txtMantisa32.getText().isEmpty()
                    && txtExponente32.getText().isEmpty())) {
                if (txtMantisa32.getText().length() < 23 || txtExponente32.getText().length() < 8) {
                    JOptionPane.showMessageDialog(this, "Asegurese de llenar los 8 bits en el exponente y los 23 bits en la mantisa!", "Error :(", JOptionPane.ERROR_MESSAGE);
                } else {
                    if (txtSigno32.getText().equals("1")) {
                        sBin.append("-");
                        sDec.append("-");
                    }
                    sBin.append(f.getBinario(txtExponente32.getText(), txtMantisa32.getText()));
                    sDec.append(f.getNumeroDecimal(txtExponente32.getText(), txtMantisa32.getText()));
                    txtInputBinario.setText(sBin.toString());
                    txtInputDecimal.setText(sDec.toString());
                    desabilitar();
                }
            } else {
                if (!(txtSigno64.getText().isEmpty()
                        && txtMantisa64.getText().isEmpty()
                        && txtExponente64.getText().isEmpty())) {
                    if (txtMantisa64.getText().length() < 52 || txtExponente64.getText().length() < 11) {
                        JOptionPane.showMessageDialog(this, "Asegurese de llenar los 11 bits en el exponente y los 52 bits en la mantisa!", "Error :(", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if (txtSigno64.getText().equals("1")) {
                            sBin.append("-");
                            sDec.append("-");
                        }
                        sBin.append(f.getBinario(txtExponente64.getText(), txtMantisa64.getText()));
                        sDec.append(f.getNumeroDecimal(txtExponente64.getText(), txtMantisa64.getText()));
                        txtInputBinario.setText(sBin.toString());
                        txtInputDecimal.setText(sDec.toString());
                        desabilitar();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Asegurese de llenar los campos correspondientes!", "Error :(", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnConvertirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtInputDecimalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputDecimalKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE)
                || (c == KeyEvent.VK_PERIOD)
                || (c == KeyEvent.VK_MINUS))) {
            getToolkit().beep();
            evt.consume();

        }
        if (c == KeyEvent.VK_PERIOD && hayPuntos(txtInputDecimal.getText())) {
            getToolkit().beep();
            evt.consume();
        }

        if (c == KeyEvent.VK_MINUS && txtInputDecimal.getText().contains("-")) {
            getToolkit().beep();
            evt.consume();
        }

        if (hayPuntos(txtInputDecimal.getText()) && txtInputDecimal.getText().length() == 1) {
            txtInputDecimal.setText("0" + txtInputDecimal.getText());
        }
    }//GEN-LAST:event_txtInputDecimalKeyTyped

    private void txtInputBinarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputBinarioKeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE)
                || (c == KeyEvent.VK_PERIOD)
                || (c == KeyEvent.VK_MINUS))) {

            getToolkit().beep();
            evt.consume();
        }
        if (c == KeyEvent.VK_PERIOD && hayPuntos(txtInputBinario.getText())) {
            getToolkit().beep();
            evt.consume();
        }
        if (c == KeyEvent.VK_MINUS && txtInputBinario.getText().contains("-")) {
            getToolkit().beep();
            evt.consume();
        }

        if (hayPuntos(txtInputBinario.getText()) && txtInputBinario.getText().length() == 1) {
            txtInputBinario.setText("0" + txtInputBinario.getText());
        }
    }//GEN-LAST:event_txtInputBinarioKeyTyped

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtSigno32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSigno32KeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))
                || !txtSigno32.getText().isEmpty()) {

            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSigno32KeyTyped

    private void txtSigno64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSigno64KeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))
                || !txtSigno64.getText().isEmpty()) {

            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSigno64KeyTyped

    private void txtExponente32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExponente32KeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))
                || txtExponente32.getText().length() >= 8) {

            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtExponente32KeyTyped

    private void txtExponente64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExponente64KeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))
                || txtExponente64.getText().length() >= 11) {

            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtExponente64KeyTyped

    private void txtMantisa32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMantisa32KeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))
                || txtMantisa32.getText().length() >= 23) {

            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMantisa32KeyTyped

    private void txtMantisa64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMantisa64KeyTyped
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_1 || c == KeyEvent.VK_0
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))
                || txtMantisa64.getText().length() >= 52) {

            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMantisa64KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panel_datos;
    private javax.swing.JTextField txtExponente32;
    private javax.swing.JTextField txtExponente64;
    private javax.swing.JTextField txtInputBinario;
    private javax.swing.JTextField txtInputDecimal;
    private javax.swing.JTextField txtMantisa32;
    private javax.swing.JTextField txtMantisa64;
    private javax.swing.JTextField txtSigno32;
    private javax.swing.JTextField txtSigno64;
    // End of variables declaration//GEN-END:variables
    private Binario binario;

}
